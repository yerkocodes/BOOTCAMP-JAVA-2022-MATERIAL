/*1. Crear usuario llamado películas y asignar todos los permisos.*/
CREATE USER peliculas IDENTIFIED BY 123321;
GRANT ALL PRIVILEGES TO peliculas;

CREATE DATABASE IF NOT EXISTS topcien;
USE topcien;
SELECT DATABASE();

CREATE TABLE IF NOT EXISTS peliculas (
  id INTEGER UNSIGNED,
  pelicula VARCHAR(200),
  anio_estreno INTEGER UNSIGNED,
  director VARCHAR(200),
  PRIMARY KEY(id)
);

CREATE TABLE IF NOT EXISTS reparto (
  id INTEGER UNSIGNED,
  actor VARCHAR(500),
  FOREIGN KEY(id) REFERENCES peliculas(id)
);

/*2. Cargar archivos (películas.csv y reparto.csv) a su tabla correspondiente.*/
/*Problemas de importación solucionado con especificación y condición de variables en los campos de columnas*/

LOAD DATA INFILE '/var/lib/mysql-files/topCien/peliculas.csv' 
INTO TABLE peliculas
FIELDS TERMINATED BY ',' 
/*ENCLOSED BY '"'*/
LINES TERMINATED BY '\n'
IGNORE 1 ROWS
( id, @Vpelicula, @Vanio_estreno, @Vdirector )
SET pelicula = IF(@Vpelicula = '', NULL, @Vpelicula),
    anio_estreno = IF(@Vanio_estreno = '', NULL, @Vanio_estreno),
    director = IF(@Vdirector = '', NULL, @Vdirector);

LOAD DATA INFILE '/var/lib/mysql-files/topCien/reparto.csv' 
INTO TABLE reparto
FIELDS TERMINATED BY ',' 
LINES TERMINATED BY '\n'
( id, @Vactor )
SET actor = IF(@Vactor= '', NULL, @Vactor);

/*3. Obtener el ID de la película “Titanic”.*/
SELECT id as id_pelicula, pelicula as nombre FROM peliculas WHERE pelicula = 'Titanic';

/*4. Listar a todos los actores que aparecen en la película "Titanic".*/
SELECT actor AS Reparto_Titanic FROM reparto 
WHERE id = (
  SELECT id
  FROM peliculas
  WHERE pelicula = 'Titanic'
);

/*5. Consultar en cuántas películas del top 100 participa Harrison Ford.*/
SELECT COUNT(*) AS numero_peliculas, reparto.actor 
FROM peliculas 
INNER JOIN reparto 
ON peliculas.id = reparto.id 
WHERE reparto.actor = 'Harrison Ford';

/*6. Indicar las películas estrenadas entre los años 1990 y 1999 ordenadas por título de manera ascendente.*/
SELECT pelicula AS Pelicula, anio_estreno AS Año_estreno
FROM peliculas 
WHERE anio_estreno BETWEEN '1990' AND '1999' 
ORDER BY pelicula ASC;

/*7. Hacer una consulta SQL que agrupe los títulos con su longitud, la longitud debe ser nombrado para la consulta como “longitud_titulo”.*/
SELECT pelicula, LENGTH(pelicula) AS longitud_titulo 
FROM peliculas 
ORDER BY longitud_titulo ASC;

/*8. Consultar cual es la longitud más grande entre todos los títulos de las películas.*/
SELECT LENGTH(pelicula) AS maximo, pelicula AS Pelicula_con_nombre_más_largo
from peliculas 
ORDER BY maximo DESC 
LIMIT 1; 
